export const animations = {

  ledstrip: {
    idle: (ms) => ([[1,0,0,ms],[1,1,0,ms],[0,0,1,ms],[0,0,0,ms],[0,1,1,ms],[1,0,0,ms],[0,0,0,ms]]),

    flash: (ms, a=[1,1,1], b=[0,0,0]) => ([[a[0],a[1],a[2],ms/2],[b[0],b[1],b[2],ms/2]]),

    playing_intro: () => {
      let out = []
      for (let i=6; i--;) {
        out = out.concat(animations.ledstrip.flash(i * 16))
      }

      return out.concat([[1,0,0,500],[0,1,0,500]]);
    },

    fade: (ms) =>  ([[1,0,0,ms],[0,1,0,ms],[0,0,1,ms]]),

    playing_default: (ms = 330) => ([[1,0,0,ms],[1,0,1,ms],[0,0,1,ms],[0,1,1,ms],[0,1,0,ms],[1,1,0,ms]]),

  },

  keyled: {

    idle: (ms) => {

      let out = [];
      let i = 0;

      for (i=6; i--;) {
        out = out.concat([
          [[1,0,0, 0,0,1, 0,0,0,0,0,0,0,0], ms],
          [[0,1,0, 0,1,0, 0,0,0,0,0,0,0,0], ms],
          [[0,0,1, 1,0,0, 0,0,0,0,0,0,0,0], ms],

          [[0,0,1, 1,0,0, 0,0,0,0,0,0,0,0], ms],
          [[0,1,0, 0,1,0, 0,0,0,0,0,0,0,0], ms],
          [[1,0,0, 0,0,1, 0,0,0,0,0,0,0,0], ms],

          [[0,0,0, 0,0,0, 1,0,0,0,0,0,0,1], ms],
          [[0,0,0, 0,0,0, 0,1,0,0,0,0,1,0], ms],
          [[0,0,0, 0,0,0, 0,0,1,0,0,1,0,0], ms],
          [[0,0,0, 0,0,0, 0,0,0,0,1,0,0,0], ms],
          [[0,0,0, 0,0,0, 0,0,0,1,0,0,0,0], ms],
          [[0,0,0, 0,0,0, 0,0,1,0,0,1,0,0], ms],
          [[0,0,0, 0,0,0, 0,1,0,0,0,0,1,0], ms],
          [[0,0,0, 0,0,0, 1,0,0,0,0,0,0,1], ms],
        ]);
      }

      for (i=3; i--;) {
        out = out.concat([
          [[1,1,1, 1,1,1, 1,1,1,1,1,1,1,1], ms*2],
          [[0,0,0, 0,0,0, 0,0,0,0,0,0,0,0], ms*2],
          [[1,1,1, 1,1,1, 1,1,1,1,1,1,1,1], ms*2],
          [[0,0,0, 0,0,0, 0,0,0,0,0,0,0,0], ms*2],
        ]);
      }

      for (i=7; i--;) {
        out.push([[1,1,1, 1,1,1, 1,1,1,1,1,1,1,1], 1000]);
      }

      out.push([[0,0,0, 0,0,0, 0,0,0,0,0,0,0,0], 100]);
      return out;
    },

    // keys = [2,0,0, 0,2,2, 0,0,1,1,0,0,0,1]
    // 0 = off
    // 1 = pressed (on, multicolor shit..)
    // 2 = hover (white)

    keyboard: (keys, ms=5) => {
      let out = [];
      for (let i=2; i--;) {
        out.push([keys.map((k) => {
          switch (k) {
            case 0:
              return 0;
            case 1:
              return 1;
            case 2:
              return (i==1?1:0);
          }
        }), ms]);
      }

      return out;
    },

    waiting: (ms = 100) => {
      return [
        [[1,0,0, 0,0,0, 0,0,0,0,0,0,0,0], ms],
        [[0,1,0, 0,0,0, 0,0,0,0,0,0,0,0], ms],
        [[0,0,1, 0,0,0, 0,0,0,0,0,0,0,0], ms],

        [[0,0,0, 1,0,0, 0,0,0,0,0,0,0,0], ms],
        [[0,0,0, 0,1,0, 0,0,0,0,0,0,0,0], ms],
        [[0,0,0, 0,0,1, 0,0,0,0,0,0,0,0], ms],

        [[0,0,0, 0,0,0, 0,0,0,0,0,0,0,1], ms],
        [[0,0,0, 0,0,0, 0,0,0,0,0,0,1,0], ms],
        [[0,0,0, 0,0,0, 0,0,0,0,0,1,0,0], ms],
        [[0,0,0, 0,0,0, 0,0,0,0,1,0,0,0], ms],
        [[0,0,0, 0,0,0, 0,0,0,1,0,0,0,0], ms],
        [[0,0,0, 0,0,0, 0,0,1,0,0,0,0,0], ms],
        [[0,0,0, 0,0,0, 0,1,0,0,0,0,0,0], ms],
        [[0,0,0, 0,0,0, 1,0,0,0,0,0,0,0], ms]
      ];
    },

    bonuschoise: (ms = 100) => {
      return [
        [[0,1,0, 0,1,0, 0,0,0,0,0,0,0,0], ms],
        [[0,0,1, 0,1,0, 0,0,0,0,0,0,0,0], ms]
      ];
    },

  },



  foo: null
};
